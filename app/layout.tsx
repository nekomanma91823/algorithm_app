"use client";

// import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
// import { useTheme } from "next-themes";
// import { useEffect, useState } from "react";
import { SidebarProvider, SidebarTrigger } from "@/components/ui/sidebar";
import { AppSidebar } from "@/components/common/app-siderbar";
import AppBreadcrumb from "@/components/common/app-breadcrumb";
import NextTopLoader from "nextjs-toploader";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Metadata is not used in client components directly, but kept for consistency if needed elsewhere.
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// function ThemeToggle() {
//   const { theme, setTheme } = useTheme();
//   const [mounted, setMounted] = useState(false);

//   useEffect(() => {
//     setMounted(true);
//   }, []);

//   if (!mounted) {
//     return null;
//   }

//   return (
//     <div className="mb-4">
//       <button
//         onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
//         className="w-full py-2 px-4 rounded bg-gray-200 hover:bg-gray-300 text-black font-bold dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-white"
//       >
//         {theme === "dark" ? "ライトモードにする" : "ダークモードにする"}
//       </button>
//     </div>
//   );
// }

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex h-screen bg-white text-black dark:bg-gray-900 dark:text-white`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <NextTopLoader
            color="#faa7b5"
            initialPosition={0.08}
            crawlSpeed={200}
            height={3}
            crawl={true}
            showSpinner={false}
            easing="ease"
            speed={200}
            shadow="0 0 10px #F472B6,0 0 5px #F472B6"
          />
          <SidebarProvider>
            <AppSidebar />

            <main className="flex-1 p-4 overflow-y-auto">
              <div className="flex items-center justify-start gap-2 mb-4">
                <SidebarTrigger />
                <AppBreadcrumb />
              </div>
              {children}
            </main>
          </SidebarProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
