"use client";

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import { useTheme } from "next-themes";
import { useEffect, useState } from "react";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// Metadata is not used in client components directly, but kept for consistency if needed elsewhere.
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

function ThemeToggle() {
  const { theme, setTheme } = useTheme();
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  if (!mounted) {
    return null;
  }

  return (
    <div className="mb-4">
      <button
        onClick={() => setTheme(theme === "dark" ? "light" : "dark")}
        className="w-full py-2 px-4 rounded bg-gray-200 hover:bg-gray-300 text-black font-bold dark:bg-gray-700 dark:hover:bg-gray-600 dark:text-white"
      >
        {theme === "dark" ? "ライトモードにする" : "ダークモードにする"}
      </button>
    </div>
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex h-screen bg-white text-black dark:bg-gray-900 dark:text-white`}
      >
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <nav className="w-64 bg-gray-100 text-black p-4 dark:bg-gray-800 dark:text-white">
            <ThemeToggle />
            <h2 className="text-xl font-bold mb-4">アルゴリズム</h2>
            <ul>
              <li>
                <a
                  href="/sort/bubble-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  バブルソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/selection-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  選択ソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/insertion-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  挿入ソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/merge-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  マージソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/quick-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  クイックソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/heap-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  ヒープソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/counting-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  カウントソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/radix-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  基数ソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/bucket-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  バケットソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/tim-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  ティムソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/intro-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  イントロソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/shell-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  シェルソート
                </a>
              </li>
              <li>
                <a
                  href="/sort/bogo-sort"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  ボゴソート
                </a>
              </li>
            </ul>
            <h2 className="text-xl font-bold mb-4 mt-8">機械学習</h2>
            <ul>
              <li>
                <a
                  href="/ml/linear-regression"
                  className="block py-2.5 px-4 rounded transition duration-200 hover:bg-gray-700"
                >
                  線形回帰
                </a>
              </li>
            </ul>
          </nav>
          <main className="flex-1 p-4 overflow-y-auto">{children}</main>
        </ThemeProvider>
      </body>
    </html>
  );
}
